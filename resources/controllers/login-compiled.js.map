{"version":3,"sources":["login.js"],"names":[],"mappings":";;AAEA;;AACA;;AAHA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,SAAS,QAAQ,MAAR,EAAb;;;AAIA,IAAI,qBAAqB,qCAAzB;;AAEA;AACA,OAAO,GAAP,CAAW,SAAS,OAAT,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,IAA3B,EAAiC;AAC3C,SAAQ,GAAR,CAAY,QAAZ,EAAsB,IAAI,IAA1B,EAAgC,SAAhC,EAA2C,IAAI,KAA/C,EAAsD,QAAtD,EAAgE,KAAK,GAAL,EAAhE;AACA;AACA,CAHD;;AAKA,OAAO,GAAP,CAAW,GAAX,EAAgB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACnC,oBAAmB,IAAnB,GACE,IADF,CACO,eAAG,GAAH,CADP,EAEE,IAFF,CAEO,IAFP,EAEa,iBAAK,GAAL,CAFb;AAGA,CAJD;;AAMA,OAAO,IAAP,CAAY,GAAZ,EAAiB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACpC,oBAAmB,IAAnB,CAAwB,IAAI,IAAJ,CAAS,IAAjC,EACE,IADF,CACO,UAAC,IAAD,EAAU;AACf,UAAQ,GAAR,CAAY,IAAZ,EAAkB,IAAI,IAAJ,CAAS,QAA3B,EAAqC,KAAK,OAAL,CAAa,QAAlD;AACA,MAAI,KAAK,OAAL,CAAa,QAAb,IAAyB,IAAI,IAAJ,CAAS,QAAtC,EAAgD;AAC9C,OAAI,IAAJ,CAAS,KAAK,SAAL,CAAe,EAAC,YAAa,IAAd,EAAf,CAAT;AACD,GAFD,MAEO;AACN,OAAI,IAAJ,CAAS,KAAK,SAAL,CAAe,EAAC,YAAa,UAAd,EAAf,CAAT;AACA;AACD,EARF,EASE,IATF,CASQ,IATR,EASc,iBAAK,GAAL,CATd;AAUA,CAXD;;AAaA,OAAO,GAAP,CAAW,OAAX,EAAoB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACvC,KAAI,IAAJ,CAAS,MAAT;AACA,CAFD;;AAIA,OAAO,OAAP,GAAiB,MAAjB","file":"login-compiled.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\nimport {ok, fail} from \"./utils\";\nimport {HistoriesController, ProfilesController, LoginsController}    from '../controllers';\n\nvar profilesController = new ProfilesController();\n\n// middleware that is specific to this router\nrouter.use(function timeLog(req, res, next) {\n\tconsole.log('Body: ', req.body, 'Query: ', req.query, 'Time: ', Date.now());\n\tnext();\n});\n\nrouter.get('/', function (req, res) {\n\tprofilesController.list()\n\t\t.then(ok(res))\n\t\t.then(null, fail(res));\n});\n\nrouter.post('/', function (req, res) {\n\tprofilesController.read(req.body.user)\n\t\t.then((data) => {\n\t\t\tconsole.log(data, req.body.password, data.profile.password);\n\t\t\tif (data.profile.password == req.body.password) {\n\t\t\t\t res.send(JSON.stringify({'response' : 'ok'}))\n\t\t\t} else {\n\t\t\t\tres.send(JSON.stringify({'response' : 'no match'}));\n\t\t\t}\n\t\t})\n\t\t.then( null, fail(res))\n});\n\nrouter.get('/auth', function (req, res) {\n\tres.send('auth')\n});\n\nmodule.exports = router;\n\n"]}