{"version":3,"sources":["base_controller.js"],"names":[],"mappings":"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","file":"base_controller-compiled.js","sourcesContent":["import should          from 'should';\nimport { Country }     from '../models';\nimport BaseController  from '../resources/controllers/base';\nimport mongoose        from 'mongoose';\nimport faker           from 'faker';\n\ndescribe('BaseController Unit Test', () => {\n\n  beforeEach(function(done) {\n    if (mongoose.connection.db) return done();\n    mongoose.connect('mongodb://localhost/generic-controller-example', done);\n  });\n\n\n  const controller = new BaseController(Country, 'isocode');\n\n\n  it('Test create()', (done) => {\n    const data = {\n      'isocode' : faker.address.countryCode(),\n      'name' : faker.address.country()\n    };\n\n    controller.create(data)\n    .then((response) => {\n      response.should.have.property('country');\n      response.country.isocode.should.equal(data.isocode);\n      response.country.name.should.equal(data.name);\n      done();\n    })\n    .then(null, done);\n  });\n\n  it('Test read()', (done) => {\n    const data = {\n      'isocode' : faker.address.countryCode(),\n      'name' : faker.address.country()\n    };\n\n    controller.create(data)\n    .then((response) => {\n      return controller.read(response.country.isocode);\n    })\n    .then((response) => {\n      response.should.have.property('country');\n      response.country.isocode.should.equal(data.isocode);\n      response.country.name.should.equal(data.name);\n      done();\n    })\n    .then(null, done);\n\n  });\n\n  it('Test update()', (done) => {\n    const data = {\n      'isocode' : faker.address.countryCode(),\n      'name' : faker.address.country()\n    };\n\n    const updatedData = {\n      'name' : faker.address.country()\n    };\n\n    controller.create(data)\n    .then((response) => {\n      return controller.update(response.country.isocode, updatedData);\n    })\n    .then((response) => {\n      response.should.have.property('country');\n      response.country.isocode.should.equal(data.isocode);\n      response.country.name.should.equal(updatedData.name);\n      done();\n    })\n    .then(null, done);\n  });\n\n  it('Test delete()', (done) => {\n    const data = {\n      'isocode' : faker.address.countryCode(),\n      'name' : faker.address.country()\n    };\n\n    controller.create(data)\n    .then((response) => {\n      return controller.read(response.country.isocode);\n    })\n    .then((response) => {\n      return controller.delete(response.country.isocode);\n    })\n    .then ((response) => {\n      return controller.read(data.isocode);\n    })\n    .then ((response) => {\n      should(response.country).not.be.ok();\n      done();\n    })\n    .then(null, (error) => {\n      done(error);\n    });\n  });\n\n  it('Test list()', (done) => {\n    const data = {\n      'isocode' : faker.address.countryCode(),\n      'name' : faker.address.country()\n    };\n\n    controller.create(data)\n    .then((response) => {\n      return controller.list();\n    })\n    .then((response) => {\n      response.should.have.property('countries');\n      response.countries.should.be.instanceOf(Array).and.not.empty;\n      done();\n    })\n    .then(null, done);\n  });\n});\n"]}